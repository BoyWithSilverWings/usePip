{"version":3,"file":"index.mjs","sources":["../src/toggle.ts","../src/index.ts"],"sourcesContent":["import { RefObject } from \"react\";\n\nfunction toggle(\n  videoRef: RefObject<HTMLVideoElement>,\n  setError: (err: string | null) => void\n): () => void {\n  return function() {\n    /* If there is no element in Picture-in-Picture yet, letâ€™s request\n      Picture-in-Picture for the video, otherwise leave it. */\n    if (!document.pictureInPictureElement) {\n      videoRef.current!.requestPictureInPicture().catch(error => {\n        // Video failed to enter Picture-in-Picture mode.\n        setError(error);\n      });\n    } else {\n      document.exitPictureInPicture().catch(error => {\n        // Video failed to leave Picture-in-Picture mode.\n        setError(error);\n      });\n    }\n  };\n}\n\nexport default toggle;\n","import { useState, useEffect, RefObject } from \"react\";\n\nimport toggle from \"./toggle\";\n\n/**\n * React custom hook to use Picture-in-Picture functionality\n * @param videoRef Reference to the video element\n *\n * @example\n * const { loading, error, toggle } = usePip(videoRef);\n */\nfunction usePip(videoRef: RefObject<HTMLVideoElement>) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(function checkSupport() {\n    const video = videoRef.current;\n    if (!video) {\n      return;\n    }\n    if (\n      !document.pictureInPictureEnabled ||\n      video.disablePictureInPicture\n    ) {\n      setError(\"NotSupportedError\");\n      setLoading(false);\n      return;\n    }\n    if(video.readyState === 0) {\n      video.addEventListener(\"loadedmetadata\", checkSupport);\n      video.addEventListener(\"emptied\", checkSupport);\n    }\n    setLoading(false);\n  }, [videoRef]);\n\n  return {\n    error,\n    loading,\n    toggle: toggle(videoRef, setError),\n  };\n}\n\nexport default usePip;\n"],"names":["toggle","videoRef","setError","document","pictureInPictureElement","exitPictureInPicture","catch","error","current","requestPictureInPicture","useState","useEffect","checkSupport","video","pictureInPictureEnabled","disablePictureInPicture","setLoading","readyState","addEventListener","loading"],"mappings":"gDAEA,SAASA,EACPC,EACAC,UAEO,WAGAC,SAASC,wBAMZD,SAASE,uBAAuBC,eAAMC,GAEpCL,EAASK,KAPXN,EAASO,QAASC,0BAA0BH,eAAMC,GAEhDL,EAASK,qBCDjB,SAAgBN,SACgBS,GAAS,mBACbA,EAAwB,2BAElDC,EAAU,SAASC,QACXC,EAAQZ,EAASO,WAClBK,OAIFV,SAASW,yBACVD,EAAME,+BAENb,EAAS,0BACTc,GAAW,GAGW,IAArBH,EAAMI,aACPJ,EAAMK,iBAAiB,iBAAkBN,GACzCC,EAAMK,iBAAiB,UAAWN,IAEpCI,GAAW,KACV,CAACf,IAEG,OACLM,UACAY,EACAnB,OAAQA,EAAOC,EAAUC"}